datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Group {
  id          String  @id @default(cuid())
  title       String  @unique
  description String?
  status      String  @default("Active")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    User[]
  activity Activity[] @relation("GroupActivity")
  Tag      Tag?       @relation(fields: [tagId], references: [id])
  tagId    String?
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  username String  @unique
  name     String?
  type     String  @default("umum")
  typename String  @default("Umum")
  status   String  @default("Pending")

  password Password?
  notes    Note[]

  group   Group?  @relation(fields: [groupId], references: [id])
  groupId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  activity Activity[] @relation("UserActivity")
  Tag      Tag?       @relation(fields: [tagId], references: [id])
  tagId    String?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Activity {
  id          String @id @default(cuid())
  type        String @default("Log")
  description String

  group   Group?  @relation("GroupActivity", fields: [groupId], references: [id])
  groupId String?

  user   User?   @relation("UserActivity", fields: [userId], references: [id])
  userId String?

  createdAt DateTime @default(now())
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Tag {
  id   String @id @default(cuid())
  name String @unique
  type String @default("")

  users  User[]
  groups Group[]
}

model Queue {
  id    String @id @default(cuid())
  name  String @unique
  value String
}
